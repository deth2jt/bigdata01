rm(list = ls())
install.packages("igraph")
library("igraph")
graph.edges <‐ read.csv(file = '/Users/jthompson/Documents/BIGDATA/ass1/email-EU/email-EU.edges', sep=" ", header=FALSE, col.names=c("src", "dest"))
graph.edges <- read.csv(file = '/Users/jthompson/Documents/BIGDATA/ass1/email-EU/email-EU.edges', sep=" ", header=FALSE, col.names=c("src", "dest"))
graph.e <- graph.edges - min(graph.edges) + 1
graph.n <- data.frame(id=seq(max(graph.e) - min(graph.e) + 1))
graph.n$group <- 1
g = graph.data.frame(graph.e, directed=FALSE, vertices=graph.n)
g2 = simplify(g)
g
g2
install.packages("hmisc")
install.packages("Hmisc")
library("Hmisc")
describe(simplify)
describe(simplify(g))
help("Hmisc")
??Hmisc
plot(g2)
c1 = cluster_fast_greedy(g2)
length(c1)
membership(c1)
sizes(c1)
m<-membership(c1)
mem<-m[m==8]
subv <- head(c1[mem],1)
subv <- subv$`8`
graphy <- induced.subgraph(graph=g2,vids=subv)
alpha_centrality(graphy)
plot(graphy)
V(graphy)
V(g2)
edges(g)
edges(g2)
edges(graphy)
vertex_attr(g2)
vertex_attr(graphy)
is.simple(graphy)
is.simple(g2)
is.simple(g3)
degree(g2, "7271")
degree(g2, "996")
degree(graphy)
astrocollab <‐ upgrade_graph(graphy)
astrocollab <- upgrade_graph(graphy)
plot(astrocollab)
eccentricity(graphy)
tail(eccentricity(graphy))
dfs(graphy,1)
degree(g2, "23129")
dfs(graphy,1)$order
tail(dfs(graphy,1)$order,3)
degree(g2, "18163")
bfs(graphy,4)
dfs(graphy,4)
count_triangles(graphy)
degree(g2, "156")
degree(g2, "23")
is.directed(graphy)
is.directed(g)
is.weighted(√)
is.weighted(graphy)
is.connected(graphy)
is.connected(g)
is.connected(g2)
closeness(graphy)
head(closeness(graphy))
degree(g2, "4")
degree(g2, 4)
count_max_cliques(graphy)
count_multiple(graphy)
components(graphy)
head(components(graphy))
head(alpha_centrality(graphy))
sort(alpha_centrality(graphy))
tail(sort(alpha_centrality(graphy)))
distances(graphy)
which.max(distances(graphy))
which.min(distances(graphy))
largest_cliques(graphy)
head(largest_cliques(graphy))
head(largest_cliques(graphy),10)
ego(graphy)
ego(graphy, gorder(graphy), V(graphy))
power_centrality(graphy)
heaad(sort(power_centrality(graphy))
)
head(sort(power_centrality(graphy)))
savehistory("~/Documents/BIGDATA/projhist.Rhistory")
